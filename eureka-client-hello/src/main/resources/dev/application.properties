eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${server.port}}
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30

hive.url=jdbc:hive2://your_localhost:10005
hive.host=your_localhost
hive.port=10005
hive.driver-class-name=org.apache.hive.jdbc.HiveDriver
hive.username=your_username
hive.password=your_password

mybatis.mapper-locations=classpath:mybatis/mapping/*.xml
mybatis.type-aliases-package=com.java.spring.client.hello.mapper

spring.datasource.url=jdbc:mysql://10.209.44.12:10043/imc?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=imc
spring.datasource.password=imc
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

redis.cache.clusterNodes=127.0.0.1:6379
redis.cache.commandTimeout=5000
redis.cache.expireSeconds=120

jedis.cache.host=127.0.0.1
jedis.cache.port=6379
jedis.cache.maxTotal=100
jedis.cache.maxIdle=10
jedis.cache.maxWaitMillils=100000

spring.redis.host=127.0.0.1
spring.redis.port=6379

#spring-boot-starter-data-mongodb  by spring auto config then to MongoRepository
spring.data.mongodb.host=127.0.0.1
spring.data.mongodb.port=27017
spring.data.mongodb.uri=mongodb://127.0.0.1:27017/mymongo

#spring-data-mongodb by mongoConfig implements AbstractMongoConfiguration then to MongoRepository
mongo.host=127.0.0.1
mongo.port=27017
mongo.db=mymongo